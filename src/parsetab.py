
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMINUSNULL NUMBER BOOL STRING EQ NE GT GE LT LE PLUS MINUS MUL DIV IDIV MOD POW POW2 INC DEC LPAREN RPAREN LBRACKET RBRACKET AT QUESTION COLUMN SEMI ID TYPE_BOOL TYPE_NUM TYPE_STR TYPE_LIST ECHO SET DEL FOR WHILE EXIT DEF LAMBDA LEN NOT AND OR XOR RND HEAD TAIL LAST PUSH MAP FILTER TYPE USES GETCUR SCRSIZE TIME PAUSEstatements : statement\n                  | statements statementstatement : exprsequence : element\n                | sequence elementelement : expr id_sequence : id_element\n                    | id_sequence id_elementid_element : IDexpr : LBRACKET command RBRACKET\n            | STRING\n            | NUMBER\n            | BOOL\n            | NULL\n            | pow_type\n            | variable\n            | list_expr\n            | lambda_expr\n            | if_statement\n            | while_statement\n            | exit_statement\n            | for_statementpow_type : TYPE_BOOL\n                | TYPE_NUM\n                | TYPE_STR\n                | TYPE_LISTvariable : ID\n                | LPAREN ID COLUMN expr RPARENlist_expr : LPAREN RPAREN\n                 | LPAREN sequence RPARENlambda_expr : AT variableif_statement : LBRACKET QUESTION expr COLUMN statements RBRACKET\n                    | LBRACKET QUESTION expr COLUMN statements SEMI statements RBRACKETwhile_statement : LBRACKET WHILE expr COLUMN statements RBRACKETexit_statement : LBRACKET EXIT RBRACKET\n                      | LBRACKET EXIT expr RBRACKETfor_statement : LBRACKET FOR LBRACKET ID expr expr RBRACKET COLUMN statements RBRACKET\n                     | LBRACKET FOR LBRACKET ID expr expr expr RBRACKET COLUMN statements RBRACKETexpr : MINUS expr %prec UMINUScommand : ECHO\n               | ECHO sequencecommand : PLUS  expr expr\n               | MINUS expr expr\n               | MUL   expr expr\n               | DIV   expr expr\n               | IDIV  expr expr\n               | MOD   expr expr\n               | POW   expr expr\n               | EQ    expr expr\n               | NE    expr expr\n               | LT    expr expr\n               | LE    expr expr\n               | GT    expr expr\n               | GE    expr exprcommand : INC ID\n               | DEC IDcommand : POW2 exprcommand : AND expr expr\n               | OR  expr expr\n               | XOR expr expr\n               | NOT exprcommand : HEAD expr\n               | TAIL expr\n               | LAST expr\n               | LEN  expr\n               | MAP expr expr\n               | FILTER expr exprcommand : TYPE exprcommand : SET ID expr\n               | SET LPAREN ID COLUMN expr RPAREN exprcommand : PUSH ID sequencecommand : DEF ID LBRACKET RBRACKET COLUMN statements\n               | DEF ID LBRACKET id_sequence RBRACKET COLUMN statementscommand : ID\n               | ID sequencecommand : LAMBDA LBRACKET id_sequence RBRACKET COLUMN exprcommand : AT ID sequencecommand : DEL IDcommand : RNDcommand : TIMEcommand : PAUSE exprcommand : GETCURcommand : SCRSIZEcommand : USES ID'
    
_lr_action_items = {'LBRACKET':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,63,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,118,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[4,4,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,4,-23,-24,-25,-26,-27,4,-2,4,4,4,85,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,119,4,-39,-27,-6,-29,4,-4,-31,-10,-35,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,153,4,4,-30,-5,4,4,-36,4,4,4,4,4,4,4,-28,-32,4,-34,4,4,4,4,4,4,4,-33,4,4,4,4,4,-37,-38,]),'STRING':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[5,5,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,5,-23,-24,-25,-26,-27,5,-2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-39,-27,-6,-29,5,-4,-31,-10,-35,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-30,-5,5,5,-36,5,5,5,5,5,5,5,-28,-32,5,-34,5,5,5,5,5,5,5,-33,5,5,5,5,5,-37,-38,]),'NUMBER':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[6,6,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,6,-23,-24,-25,-26,-27,6,-2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-39,-27,-6,-29,6,-4,-31,-10,-35,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-30,-5,6,6,-36,6,6,6,6,6,6,6,-28,-32,6,-34,6,6,6,6,6,6,6,-33,6,6,6,6,6,-37,-38,]),'BOOL':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[7,7,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,7,-23,-24,-25,-26,-27,7,-2,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-39,-27,-6,-29,7,-4,-31,-10,-35,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-30,-5,7,7,-36,7,7,7,7,7,7,7,-28,-32,7,-34,7,7,7,7,7,7,7,-33,7,7,7,7,7,-37,-38,]),'NULL':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[8,8,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,8,-23,-24,-25,-26,-27,8,-2,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-39,-27,-6,-29,8,-4,-31,-10,-35,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-30,-5,8,8,-36,8,8,8,8,8,8,8,-28,-32,8,-34,8,8,8,8,8,8,8,-33,8,8,8,8,8,-37,-38,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[17,17,-1,-3,34,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,17,-23,-24,-25,-26,-27,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-39,-27,-6,-29,17,-4,-31,-10,-35,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-30,-5,17,17,-36,17,17,17,17,17,17,17,-28,-32,17,-34,17,17,17,17,17,17,17,-33,17,17,17,17,17,-37,-38,]),'TYPE_BOOL':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[18,18,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,18,-23,-24,-25,-26,-27,18,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-39,-27,-6,-29,18,-4,-31,-10,-35,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-30,-5,18,18,-36,18,18,18,18,18,18,18,-28,-32,18,-34,18,18,18,18,18,18,18,-33,18,18,18,18,18,-37,-38,]),'TYPE_NUM':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[19,19,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,19,-23,-24,-25,-26,-27,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-39,-27,-6,-29,19,-4,-31,-10,-35,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-30,-5,19,19,-36,19,19,19,19,19,19,19,-28,-32,19,-34,19,19,19,19,19,19,19,-33,19,19,19,19,19,-37,-38,]),'TYPE_STR':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[20,20,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,20,-23,-24,-25,-26,-27,20,-2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-39,-27,-6,-29,20,-4,-31,-10,-35,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-30,-5,20,20,-36,20,20,20,20,20,20,20,-28,-32,20,-34,20,20,20,20,20,20,20,-33,20,20,20,20,20,-37,-38,]),'TYPE_LIST':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[21,21,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,21,-23,-24,-25,-26,-27,21,-2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-39,-27,-6,-29,21,-4,-31,-10,-35,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-30,-5,21,21,-36,21,21,21,21,21,21,21,-28,-32,21,-34,21,21,21,21,21,21,21,-33,21,21,21,21,21,-37,-38,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,68,71,72,73,74,75,76,77,78,79,80,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,116,117,119,120,124,125,126,128,129,130,131,152,153,154,155,156,157,159,160,161,162,164,166,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[22,22,-1,-3,31,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,22,-23,-24,-25,-26,-27,73,22,-2,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,101,102,22,22,22,22,22,22,22,22,22,22,22,22,115,117,118,120,121,22,123,-39,-27,-6,-29,22,-4,-31,127,-10,-35,131,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,151,22,156,22,22,-30,-5,22,22,-36,22,22,156,156,-7,-9,22,22,22,22,22,156,-8,-28,-32,22,-34,22,22,22,22,22,22,22,-33,22,22,22,22,22,-37,-38,]),'LPAREN':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[23,23,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,23,-23,-24,-25,-26,-27,23,79,-2,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,116,23,-39,-27,-6,-29,23,-4,-31,-10,-35,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-30,-5,23,23,-36,23,23,23,23,23,23,23,-28,-32,23,-34,23,23,23,23,23,23,23,-33,23,23,23,23,23,-37,-38,]),'AT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,72,73,74,75,76,77,78,80,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,125,126,128,129,130,131,152,157,159,160,161,162,167,168,169,170,171,173,175,176,179,180,181,183,185,187,188,189,190,191,192,],[24,24,-1,-3,64,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,24,-23,-24,-25,-26,-27,24,-2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-39,-27,-6,-29,24,-4,-31,-10,-35,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-30,-5,24,24,-36,24,24,24,24,24,24,24,-28,-32,24,-34,24,24,24,24,24,24,24,-33,24,24,24,24,24,-37,-38,]),'$end':([1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,25,72,75,78,80,83,125,130,167,168,170,183,191,192,],[0,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-2,-39,-29,-31,-10,-35,-30,-36,-28,-32,-34,-33,-37,-38,]),'RBRACKET':([2,3,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,25,26,29,31,32,66,67,69,70,72,74,75,77,78,80,83,84,86,87,101,102,103,107,108,109,110,111,114,121,122,123,125,126,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,159,160,164,166,167,168,170,171,176,177,180,182,183,186,187,189,190,191,192,],[-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-2,80,83,-74,-40,-79,-80,-82,-83,-39,-6,-29,-4,-31,-10,-35,130,-75,-41,-55,-56,-57,-61,-62,-63,-64,-65,-68,-78,-81,-84,-30,-5,-36,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-58,-59,-60,-66,-67,-69,-71,163,165,-7,-9,-77,168,170,174,-8,-28,-32,-34,178,183,184,-72,-76,-33,-70,-73,191,192,-37,-38,]),'SEMI':([2,3,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,25,72,75,78,80,83,125,130,159,167,168,170,183,191,192,],[-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-2,-39,-29,-31,-10,-35,-30,-36,169,-28,-32,-34,-33,-37,-38,]),'QUESTION':([4,],[27,]),'WHILE':([4,],[28,]),'EXIT':([4,],[29,]),'FOR':([4,],[30,]),'ECHO':([4,],[32,]),'PLUS':([4,],[33,]),'MUL':([4,],[35,]),'DIV':([4,],[36,]),'IDIV':([4,],[37,]),'MOD':([4,],[38,]),'POW':([4,],[39,]),'EQ':([4,],[40,]),'NE':([4,],[41,]),'LT':([4,],[42,]),'LE':([4,],[43,]),'GT':([4,],[44,]),'GE':([4,],[45,]),'INC':([4,],[46,]),'DEC':([4,],[47,]),'POW2':([4,],[48,]),'AND':([4,],[49,]),'OR':([4,],[50,]),'XOR':([4,],[51,]),'NOT':([4,],[52,]),'HEAD':([4,],[53,]),'TAIL':([4,],[54,]),'LAST':([4,],[55,]),'LEN':([4,],[56,]),'MAP':([4,],[57,]),'FILTER':([4,],[58,]),'TYPE':([4,],[59,]),'SET':([4,],[60,]),'PUSH':([4,],[61,]),'DEF':([4,],[62,]),'LAMBDA':([4,],[63,]),'DEL':([4,],[65,]),'RND':([4,],[66,]),'TIME':([4,],[67,]),'PAUSE':([4,],[68,]),'GETCUR':([4,],[69,]),'SCRSIZE':([4,],[70,]),'USES':([4,],[71,]),'RPAREN':([5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,72,73,74,75,76,77,78,80,83,125,126,130,158,167,168,170,172,183,191,192,],[-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,75,-39,-27,-6,-29,125,-4,-31,-10,-35,-30,-5,-36,167,-28,-32,-34,179,-33,-37,-38,]),'COLUMN':([5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,72,73,75,78,80,81,82,83,125,127,130,151,163,165,167,168,170,174,178,183,184,191,192,],[-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-39,124,-29,-31,-10,128,129,-35,-30,124,-36,162,173,175,-28,-32,-34,181,185,-33,188,-37,-38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,128,129,169,173,181,185,188,],[1,159,160,176,180,187,189,190,]),'statement':([0,1,128,129,159,160,169,173,176,180,181,185,187,188,189,190,],[2,25,2,2,25,25,2,2,25,25,2,2,25,2,25,25,]),'expr':([0,1,17,23,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,128,129,131,152,157,159,160,161,162,169,171,173,175,176,179,180,181,185,187,188,189,190,],[3,3,72,74,81,82,84,74,74,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,122,74,74,74,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,74,74,158,3,3,161,74,74,3,3,171,172,3,177,3,182,3,186,3,3,3,3,3,3,3,]),'pow_type':([0,1,17,23,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,128,129,131,152,157,159,160,161,162,169,171,173,175,176,179,180,181,185,187,188,189,190,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'variable':([0,1,17,23,24,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,128,129,131,152,157,159,160,161,162,169,171,173,175,176,179,180,181,185,187,188,189,190,],[10,10,10,10,78,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'list_expr':([0,1,17,23,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,128,129,131,152,157,159,160,161,162,169,171,173,175,176,179,180,181,185,187,188,189,190,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'lambda_expr':([0,1,17,23,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,128,129,131,152,157,159,160,161,162,169,171,173,175,176,179,180,181,185,187,188,189,190,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'if_statement':([0,1,17,23,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,128,129,131,152,157,159,160,161,162,169,171,173,175,176,179,180,181,185,187,188,189,190,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'while_statement':([0,1,17,23,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,128,129,131,152,157,159,160,161,162,169,171,173,175,176,179,180,181,185,187,188,189,190,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'exit_statement':([0,1,17,23,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,128,129,131,152,157,159,160,161,162,169,171,173,175,176,179,180,181,185,187,188,189,190,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'for_statement':([0,1,17,23,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,68,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,117,120,124,128,129,131,152,157,159,160,161,162,169,171,173,175,176,179,180,181,185,187,188,189,190,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'command':([4,],[26,]),'sequence':([23,31,32,117,120,],[76,86,87,152,157,]),'element':([23,31,32,76,86,87,117,120,152,157,],[77,77,77,126,126,126,77,77,126,126,]),'id_sequence':([119,153,],[154,164,]),'id_element':([119,153,154,164,],[155,155,166,166,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','powrser.py',11),
  ('statements -> statements statement','statements',2,'p_statements','powrser.py',12),
  ('statement -> expr','statement',1,'p_statement','powrser.py',20),
  ('sequence -> element','sequence',1,'p_sequence','powrser.py',24),
  ('sequence -> sequence element','sequence',2,'p_sequence','powrser.py',25),
  ('element -> expr','element',1,'p_element','powrser.py',32),
  ('id_sequence -> id_element','id_sequence',1,'p_id_sequence','powrser.py',36),
  ('id_sequence -> id_sequence id_element','id_sequence',2,'p_id_sequence','powrser.py',37),
  ('id_element -> ID','id_element',1,'p_id_element','powrser.py',44),
  ('expr -> LBRACKET command RBRACKET','expr',3,'p_expr','powrser.py',48),
  ('expr -> STRING','expr',1,'p_expr','powrser.py',49),
  ('expr -> NUMBER','expr',1,'p_expr','powrser.py',50),
  ('expr -> BOOL','expr',1,'p_expr','powrser.py',51),
  ('expr -> NULL','expr',1,'p_expr','powrser.py',52),
  ('expr -> pow_type','expr',1,'p_expr','powrser.py',53),
  ('expr -> variable','expr',1,'p_expr','powrser.py',54),
  ('expr -> list_expr','expr',1,'p_expr','powrser.py',55),
  ('expr -> lambda_expr','expr',1,'p_expr','powrser.py',56),
  ('expr -> if_statement','expr',1,'p_expr','powrser.py',57),
  ('expr -> while_statement','expr',1,'p_expr','powrser.py',58),
  ('expr -> exit_statement','expr',1,'p_expr','powrser.py',59),
  ('expr -> for_statement','expr',1,'p_expr','powrser.py',60),
  ('pow_type -> TYPE_BOOL','pow_type',1,'p_pow_type','powrser.py',67),
  ('pow_type -> TYPE_NUM','pow_type',1,'p_pow_type','powrser.py',68),
  ('pow_type -> TYPE_STR','pow_type',1,'p_pow_type','powrser.py',69),
  ('pow_type -> TYPE_LIST','pow_type',1,'p_pow_type','powrser.py',70),
  ('variable -> ID','variable',1,'p_variable','powrser.py',74),
  ('variable -> LPAREN ID COLUMN expr RPAREN','variable',5,'p_variable','powrser.py',75),
  ('list_expr -> LPAREN RPAREN','list_expr',2,'p_list_expr','powrser.py',82),
  ('list_expr -> LPAREN sequence RPAREN','list_expr',3,'p_list_expr','powrser.py',83),
  ('lambda_expr -> AT variable','lambda_expr',2,'p_lambda_expr','powrser.py',90),
  ('if_statement -> LBRACKET QUESTION expr COLUMN statements RBRACKET','if_statement',6,'p_if_statement','powrser.py',94),
  ('if_statement -> LBRACKET QUESTION expr COLUMN statements SEMI statements RBRACKET','if_statement',8,'p_if_statement','powrser.py',95),
  ('while_statement -> LBRACKET WHILE expr COLUMN statements RBRACKET','while_statement',6,'p_while_statement','powrser.py',102),
  ('exit_statement -> LBRACKET EXIT RBRACKET','exit_statement',3,'p_exit_statement','powrser.py',106),
  ('exit_statement -> LBRACKET EXIT expr RBRACKET','exit_statement',4,'p_exit_statement','powrser.py',107),
  ('for_statement -> LBRACKET FOR LBRACKET ID expr expr RBRACKET COLUMN statements RBRACKET','for_statement',10,'p_for_statement','powrser.py',112),
  ('for_statement -> LBRACKET FOR LBRACKET ID expr expr expr RBRACKET COLUMN statements RBRACKET','for_statement',11,'p_for_statement','powrser.py',113),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','powrser.py',120),
  ('command -> ECHO','command',1,'p_command_echo','powrser.py',124),
  ('command -> ECHO sequence','command',2,'p_command_echo','powrser.py',125),
  ('command -> PLUS expr expr','command',3,'p_command_binop','powrser.py',132),
  ('command -> MINUS expr expr','command',3,'p_command_binop','powrser.py',133),
  ('command -> MUL expr expr','command',3,'p_command_binop','powrser.py',134),
  ('command -> DIV expr expr','command',3,'p_command_binop','powrser.py',135),
  ('command -> IDIV expr expr','command',3,'p_command_binop','powrser.py',136),
  ('command -> MOD expr expr','command',3,'p_command_binop','powrser.py',137),
  ('command -> POW expr expr','command',3,'p_command_binop','powrser.py',138),
  ('command -> EQ expr expr','command',3,'p_command_binop','powrser.py',139),
  ('command -> NE expr expr','command',3,'p_command_binop','powrser.py',140),
  ('command -> LT expr expr','command',3,'p_command_binop','powrser.py',141),
  ('command -> LE expr expr','command',3,'p_command_binop','powrser.py',142),
  ('command -> GT expr expr','command',3,'p_command_binop','powrser.py',143),
  ('command -> GE expr expr','command',3,'p_command_binop','powrser.py',144),
  ('command -> INC ID','command',2,'p_command_incdec','powrser.py',148),
  ('command -> DEC ID','command',2,'p_command_incdec','powrser.py',149),
  ('command -> POW2 expr','command',2,'p_command_pow2','powrser.py',153),
  ('command -> AND expr expr','command',3,'p_command_boolop','powrser.py',157),
  ('command -> OR expr expr','command',3,'p_command_boolop','powrser.py',158),
  ('command -> XOR expr expr','command',3,'p_command_boolop','powrser.py',159),
  ('command -> NOT expr','command',2,'p_command_boolop','powrser.py',160),
  ('command -> HEAD expr','command',2,'p_command_listcmd','powrser.py',169),
  ('command -> TAIL expr','command',2,'p_command_listcmd','powrser.py',170),
  ('command -> LAST expr','command',2,'p_command_listcmd','powrser.py',171),
  ('command -> LEN expr','command',2,'p_command_listcmd','powrser.py',172),
  ('command -> MAP expr expr','command',3,'p_command_listcmd','powrser.py',173),
  ('command -> FILTER expr expr','command',3,'p_command_listcmd','powrser.py',174),
  ('command -> TYPE expr','command',2,'p_command_type','powrser.py',183),
  ('command -> SET ID expr','command',3,'p_command_set','powrser.py',187),
  ('command -> SET LPAREN ID COLUMN expr RPAREN expr','command',7,'p_command_set','powrser.py',188),
  ('command -> PUSH ID sequence','command',3,'p_command_push','powrser.py',195),
  ('command -> DEF ID LBRACKET RBRACKET COLUMN statements','command',6,'p_command_def','powrser.py',199),
  ('command -> DEF ID LBRACKET id_sequence RBRACKET COLUMN statements','command',7,'p_command_def','powrser.py',200),
  ('command -> ID','command',1,'p_command_call','powrser.py',207),
  ('command -> ID sequence','command',2,'p_command_call','powrser.py',208),
  ('command -> LAMBDA LBRACKET id_sequence RBRACKET COLUMN expr','command',6,'p_command_lambda','powrser.py',215),
  ('command -> AT ID sequence','command',3,'p_command_lambdacall','powrser.py',219),
  ('command -> DEL ID','command',2,'p_command_del','powrser.py',223),
  ('command -> RND','command',1,'p_command_rnd','powrser.py',227),
  ('command -> TIME','command',1,'p_command_time','powrser.py',231),
  ('command -> PAUSE expr','command',2,'p_command_pause','powrser.py',235),
  ('command -> GETCUR','command',1,'p_command_getcur','powrser.py',239),
  ('command -> SCRSIZE','command',1,'p_command_scrsize','powrser.py',243),
  ('command -> USES ID','command',2,'p_command_uses','powrser.py',247),
]
