
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMINUSNULL NUMBER BOOL STRING EQ NE GT GE LT LE PLUS MINUS MUL DIV IDIV MOD POW POW2 INC DEC LPAREN RPAREN LBRACKET RBRACKET AT QUESTION COLUMN SEMI ID ECHO SET DEL FOR WHILE EXIT DEF LAMBDA LEN NOT AND OR XOR RND HEAD TAIL LAST PUSH MAP FILTER USES GETCUR SCRSIZE TIME PAUSEstatements : statement\n                  | statements statementstatement : exprsequence : element\n                | sequence elementelement : expr id_sequence : id_element\n                    | id_sequence id_elementid_element : IDexpr : LBRACKET command RBRACKET\n            | STRING\n            | NUMBER\n            | BOOL\n            | NULL\n            | variable\n            | list_expr\n            | lambda_expr\n            | if_statement\n            | while_statement\n            | exit_statement\n            | for_statementvariable : ID\n                | LPAREN ID COLUMN expr RPARENlist_expr : LPAREN RPAREN\n                 | LPAREN sequence RPARENlambda_expr : AT variableif_statement : LBRACKET QUESTION expr COLUMN statements RBRACKET\n                    | LBRACKET QUESTION expr COLUMN statements SEMI statements RBRACKETwhile_statement : LBRACKET WHILE expr COLUMN statements RBRACKETexit_statement : LBRACKET EXIT RBRACKET\n                      | LBRACKET EXIT expr RBRACKETfor_statement : LBRACKET FOR LBRACKET ID expr expr RBRACKET COLUMN statements RBRACKET\n                     | LBRACKET FOR LBRACKET ID expr expr expr RBRACKET COLUMN statements RBRACKETexpr : MINUS expr %prec UMINUScommand : ECHO\n               | ECHO sequencecommand : PLUS  expr expr\n               | MINUS expr expr\n               | MUL   expr expr\n               | DIV   expr expr\n               | IDIV  expr expr\n               | MOD   expr expr\n               | POW   expr expr\n               | EQ    expr expr\n               | NE    expr expr\n               | LT    expr expr\n               | LE    expr expr\n               | GT    expr expr\n               | GE    expr exprcommand : INC ID\n               | DEC IDcommand : POW2 exprcommand : AND expr expr\n               | OR  expr expr\n               | XOR expr expr\n               | NOT exprcommand : HEAD expr\n               | TAIL expr\n               | LAST expr\n               | LEN  expr\n               | MAP expr expr\n               | FILTER expr exprcommand : SET ID expr\n               | SET LPAREN ID COLUMN expr RPAREN exprcommand : PUSH ID sequencecommand : DEF ID LBRACKET RBRACKET COLUMN statements\n               | DEF ID LBRACKET id_sequence RBRACKET COLUMN statementscommand : ID\n               | ID sequencecommand : LAMBDA LBRACKET id_sequence RBRACKET COLUMN exprcommand : AT ID sequencecommand : DEL IDcommand : RNDcommand : TIMEcommand : PAUSE exprcommand : GETCURcommand : SCRSIZEcommand : USES ID'
    
_lr_action_items = {'LBRACKET':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,57,62,66,67,68,69,70,71,72,74,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,111,113,117,118,119,121,122,123,124,145,150,152,153,154,155,160,161,162,163,164,166,168,169,172,173,174,176,178,180,181,182,183,184,185,],[4,4,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,4,-22,4,-2,4,4,4,79,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,112,4,-34,-22,-6,-24,4,-4,-26,-10,-30,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,146,4,4,-25,-5,4,4,-31,4,4,4,4,4,4,4,-23,-27,4,-29,4,4,4,4,4,4,4,-28,4,4,4,4,4,-32,-33,]),'STRING':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,66,67,68,69,70,71,72,74,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,118,119,121,122,123,124,145,150,152,153,154,155,160,161,162,163,164,166,168,169,172,173,174,176,178,180,181,182,183,184,185,],[5,5,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,5,-22,5,-2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-34,-22,-6,-24,5,-4,-26,-10,-30,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-25,-5,5,5,-31,5,5,5,5,5,5,5,-23,-27,5,-29,5,5,5,5,5,5,5,-28,5,5,5,5,5,-32,-33,]),'NUMBER':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,66,67,68,69,70,71,72,74,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,118,119,121,122,123,124,145,150,152,153,154,155,160,161,162,163,164,166,168,169,172,173,174,176,178,180,181,182,183,184,185,],[6,6,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,6,-22,6,-2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-34,-22,-6,-24,6,-4,-26,-10,-30,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-25,-5,6,6,-31,6,6,6,6,6,6,6,-23,-27,6,-29,6,6,6,6,6,6,6,-28,6,6,6,6,6,-32,-33,]),'BOOL':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,66,67,68,69,70,71,72,74,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,118,119,121,122,123,124,145,150,152,153,154,155,160,161,162,163,164,166,168,169,172,173,174,176,178,180,181,182,183,184,185,],[7,7,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,7,-22,7,-2,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-34,-22,-6,-24,7,-4,-26,-10,-30,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-25,-5,7,7,-31,7,7,7,7,7,7,7,-23,-27,7,-29,7,7,7,7,7,7,7,-28,7,7,7,7,7,-32,-33,]),'NULL':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,66,67,68,69,70,71,72,74,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,118,119,121,122,123,124,145,150,152,153,154,155,160,161,162,163,164,166,168,169,172,173,174,176,178,180,181,182,183,184,185,],[8,8,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,8,-22,8,-2,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-34,-22,-6,-24,8,-4,-26,-10,-30,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-25,-5,8,8,-31,8,8,8,8,8,8,8,-23,-27,8,-29,8,8,8,8,8,8,8,-28,8,8,8,8,8,-32,-33,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,66,67,68,69,70,71,72,74,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,118,119,121,122,123,124,145,150,152,153,154,155,160,161,162,163,164,166,168,169,172,173,174,176,178,180,181,182,183,184,185,],[16,16,-1,-3,29,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,16,-22,16,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-34,-22,-6,-24,16,-4,-26,-10,-30,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-25,-5,16,16,-31,16,16,16,16,16,16,16,-23,-27,16,-29,16,16,16,16,16,16,16,-28,16,16,16,16,16,-32,-33,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,65,66,67,68,69,70,71,72,73,74,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,109,110,112,113,117,118,119,121,122,123,124,145,146,147,148,149,150,152,153,154,155,157,159,160,161,162,163,164,166,168,169,172,173,174,176,178,180,181,182,183,184,185,],[17,17,-1,-3,26,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,17,-22,67,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,95,96,17,17,17,17,17,17,17,17,17,17,17,108,110,111,113,114,17,116,-34,-22,-6,-24,17,-4,-26,120,-10,-30,124,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,144,17,149,17,17,-25,-5,17,17,-31,17,17,149,149,-7,-9,17,17,17,17,17,149,-8,-23,-27,17,-29,17,17,17,17,17,17,17,-28,17,17,17,17,17,-32,-33,]),'LPAREN':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,62,66,67,68,69,70,71,72,74,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,118,119,121,122,123,124,145,150,152,153,154,155,160,161,162,163,164,166,168,169,172,173,174,176,178,180,181,182,183,184,185,],[18,18,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,18,-22,18,73,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,109,18,-34,-22,-6,-24,18,-4,-26,-10,-30,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-25,-5,18,18,-31,18,18,18,18,18,18,18,-23,-27,18,-29,18,18,18,18,18,18,18,-28,18,18,18,18,18,-32,-33,]),'AT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,66,67,68,69,70,71,72,74,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,118,119,121,122,123,124,145,150,152,153,154,155,160,161,162,163,164,166,168,169,172,173,174,176,178,180,181,182,183,184,185,],[19,19,-1,-3,58,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,19,-22,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-34,-22,-6,-24,19,-4,-26,-10,-30,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-25,-5,19,19,-31,19,19,19,19,19,19,19,-23,-27,19,-29,19,19,19,19,19,19,19,-28,19,19,19,19,19,-32,-33,]),'$end':([1,2,3,5,6,7,8,9,10,11,12,13,14,15,17,20,66,69,72,74,77,118,123,160,161,163,176,184,185,],[0,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,-34,-24,-26,-10,-30,-25,-31,-23,-27,-29,-28,-32,-33,]),'RBRACKET':([2,3,5,6,7,8,9,10,11,12,13,14,15,17,20,21,24,26,27,60,61,63,64,66,68,69,71,72,74,77,78,80,81,95,96,97,101,102,103,104,105,114,115,116,118,119,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,152,153,157,159,160,161,163,164,169,170,173,175,176,179,180,182,183,184,185,],[-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,74,77,-68,-35,-73,-74,-76,-77,-34,-6,-24,-4,-26,-10,-30,123,-69,-36,-50,-51,-52,-56,-57,-58,-59,-60,-72,-75,-78,-25,-5,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-53,-54,-55,-61,-62,-63,-65,156,158,-7,-9,-71,161,163,167,-8,-23,-27,-29,171,176,177,-66,-70,-28,-64,-67,184,185,-32,-33,]),'SEMI':([2,3,5,6,7,8,9,10,11,12,13,14,15,17,20,66,69,72,74,77,118,123,152,160,161,163,176,184,185,],[-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,-34,-24,-26,-10,-30,-25,-31,162,-23,-27,-29,-28,-32,-33,]),'QUESTION':([4,],[22,]),'WHILE':([4,],[23,]),'EXIT':([4,],[24,]),'FOR':([4,],[25,]),'ECHO':([4,],[27,]),'PLUS':([4,],[28,]),'MUL':([4,],[30,]),'DIV':([4,],[31,]),'IDIV':([4,],[32,]),'MOD':([4,],[33,]),'POW':([4,],[34,]),'EQ':([4,],[35,]),'NE':([4,],[36,]),'LT':([4,],[37,]),'LE':([4,],[38,]),'GT':([4,],[39,]),'GE':([4,],[40,]),'INC':([4,],[41,]),'DEC':([4,],[42,]),'POW2':([4,],[43,]),'AND':([4,],[44,]),'OR':([4,],[45,]),'XOR':([4,],[46,]),'NOT':([4,],[47,]),'HEAD':([4,],[48,]),'TAIL':([4,],[49,]),'LAST':([4,],[50,]),'LEN':([4,],[51,]),'MAP':([4,],[52,]),'FILTER':([4,],[53,]),'SET':([4,],[54,]),'PUSH':([4,],[55,]),'DEF':([4,],[56,]),'LAMBDA':([4,],[57,]),'DEL':([4,],[59,]),'RND':([4,],[60,]),'TIME':([4,],[61,]),'PAUSE':([4,],[62,]),'GETCUR':([4,],[63,]),'SCRSIZE':([4,],[64,]),'USES':([4,],[65,]),'RPAREN':([5,6,7,8,9,10,11,12,13,14,15,17,18,66,67,68,69,70,71,72,74,77,118,119,123,151,160,161,163,165,176,184,185,],[-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,69,-34,-22,-6,-24,118,-4,-26,-10,-30,-25,-5,-31,160,-23,-27,-29,172,-28,-32,-33,]),'COLUMN':([5,6,7,8,9,10,11,12,13,14,15,17,66,67,69,72,74,75,76,77,118,120,123,144,156,158,160,161,163,167,171,176,177,184,185,],[-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,117,-24,-26,-10,121,122,-30,-25,117,-31,155,166,168,-23,-27,-29,174,178,-28,181,-32,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,121,122,162,166,174,178,181,],[1,152,153,169,173,180,182,183,]),'statement':([0,1,121,122,152,153,162,166,169,173,174,178,180,181,182,183,],[2,20,2,2,20,20,2,2,20,20,2,2,20,2,20,20,]),'expr':([0,1,16,18,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,70,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,121,122,124,145,150,152,153,154,155,162,164,166,168,169,172,173,174,178,180,181,182,183,],[3,3,66,68,75,76,78,68,68,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,101,102,103,104,105,106,107,115,68,68,68,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,68,68,151,3,3,154,68,68,3,3,164,165,3,170,3,175,3,179,3,3,3,3,3,3,3,]),'variable':([0,1,16,18,19,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,70,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,121,122,124,145,150,152,153,154,155,162,164,166,168,169,172,173,174,178,180,181,182,183,],[9,9,9,9,72,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'list_expr':([0,1,16,18,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,70,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,121,122,124,145,150,152,153,154,155,162,164,166,168,169,172,173,174,178,180,181,182,183,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'lambda_expr':([0,1,16,18,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,70,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,121,122,124,145,150,152,153,154,155,162,164,166,168,169,172,173,174,178,180,181,182,183,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'if_statement':([0,1,16,18,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,70,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,121,122,124,145,150,152,153,154,155,162,164,166,168,169,172,173,174,178,180,181,182,183,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'while_statement':([0,1,16,18,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,70,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,121,122,124,145,150,152,153,154,155,162,164,166,168,169,172,173,174,178,180,181,182,183,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'exit_statement':([0,1,16,18,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,70,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,121,122,124,145,150,152,153,154,155,162,164,166,168,169,172,173,174,178,180,181,182,183,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'for_statement':([0,1,16,18,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,62,70,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,106,107,108,110,113,117,121,122,124,145,150,152,153,154,155,162,164,166,168,169,172,173,174,178,180,181,182,183,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'command':([4,],[21,]),'sequence':([18,26,27,110,113,],[70,80,81,145,150,]),'element':([18,26,27,70,80,81,110,113,145,150,],[71,71,71,119,119,119,71,71,119,119,]),'id_sequence':([112,146,],[147,157,]),'id_element':([112,146,147,157,],[148,148,159,159,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','powrser.py',11),
  ('statements -> statements statement','statements',2,'p_statements','powrser.py',12),
  ('statement -> expr','statement',1,'p_statement','powrser.py',20),
  ('sequence -> element','sequence',1,'p_sequence','powrser.py',24),
  ('sequence -> sequence element','sequence',2,'p_sequence','powrser.py',25),
  ('element -> expr','element',1,'p_element','powrser.py',32),
  ('id_sequence -> id_element','id_sequence',1,'p_id_sequence','powrser.py',36),
  ('id_sequence -> id_sequence id_element','id_sequence',2,'p_id_sequence','powrser.py',37),
  ('id_element -> ID','id_element',1,'p_id_element','powrser.py',44),
  ('expr -> LBRACKET command RBRACKET','expr',3,'p_expr','powrser.py',48),
  ('expr -> STRING','expr',1,'p_expr','powrser.py',49),
  ('expr -> NUMBER','expr',1,'p_expr','powrser.py',50),
  ('expr -> BOOL','expr',1,'p_expr','powrser.py',51),
  ('expr -> NULL','expr',1,'p_expr','powrser.py',52),
  ('expr -> variable','expr',1,'p_expr','powrser.py',53),
  ('expr -> list_expr','expr',1,'p_expr','powrser.py',54),
  ('expr -> lambda_expr','expr',1,'p_expr','powrser.py',55),
  ('expr -> if_statement','expr',1,'p_expr','powrser.py',56),
  ('expr -> while_statement','expr',1,'p_expr','powrser.py',57),
  ('expr -> exit_statement','expr',1,'p_expr','powrser.py',58),
  ('expr -> for_statement','expr',1,'p_expr','powrser.py',59),
  ('variable -> ID','variable',1,'p_variable','powrser.py',66),
  ('variable -> LPAREN ID COLUMN expr RPAREN','variable',5,'p_variable','powrser.py',67),
  ('list_expr -> LPAREN RPAREN','list_expr',2,'p_list_expr','powrser.py',74),
  ('list_expr -> LPAREN sequence RPAREN','list_expr',3,'p_list_expr','powrser.py',75),
  ('lambda_expr -> AT variable','lambda_expr',2,'p_lambda_expr','powrser.py',82),
  ('if_statement -> LBRACKET QUESTION expr COLUMN statements RBRACKET','if_statement',6,'p_if_statement','powrser.py',86),
  ('if_statement -> LBRACKET QUESTION expr COLUMN statements SEMI statements RBRACKET','if_statement',8,'p_if_statement','powrser.py',87),
  ('while_statement -> LBRACKET WHILE expr COLUMN statements RBRACKET','while_statement',6,'p_while_statement','powrser.py',94),
  ('exit_statement -> LBRACKET EXIT RBRACKET','exit_statement',3,'p_exit_statement','powrser.py',98),
  ('exit_statement -> LBRACKET EXIT expr RBRACKET','exit_statement',4,'p_exit_statement','powrser.py',99),
  ('for_statement -> LBRACKET FOR LBRACKET ID expr expr RBRACKET COLUMN statements RBRACKET','for_statement',10,'p_for_statement','powrser.py',104),
  ('for_statement -> LBRACKET FOR LBRACKET ID expr expr expr RBRACKET COLUMN statements RBRACKET','for_statement',11,'p_for_statement','powrser.py',105),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','powrser.py',112),
  ('command -> ECHO','command',1,'p_command_echo','powrser.py',116),
  ('command -> ECHO sequence','command',2,'p_command_echo','powrser.py',117),
  ('command -> PLUS expr expr','command',3,'p_command_binop','powrser.py',124),
  ('command -> MINUS expr expr','command',3,'p_command_binop','powrser.py',125),
  ('command -> MUL expr expr','command',3,'p_command_binop','powrser.py',126),
  ('command -> DIV expr expr','command',3,'p_command_binop','powrser.py',127),
  ('command -> IDIV expr expr','command',3,'p_command_binop','powrser.py',128),
  ('command -> MOD expr expr','command',3,'p_command_binop','powrser.py',129),
  ('command -> POW expr expr','command',3,'p_command_binop','powrser.py',130),
  ('command -> EQ expr expr','command',3,'p_command_binop','powrser.py',131),
  ('command -> NE expr expr','command',3,'p_command_binop','powrser.py',132),
  ('command -> LT expr expr','command',3,'p_command_binop','powrser.py',133),
  ('command -> LE expr expr','command',3,'p_command_binop','powrser.py',134),
  ('command -> GT expr expr','command',3,'p_command_binop','powrser.py',135),
  ('command -> GE expr expr','command',3,'p_command_binop','powrser.py',136),
  ('command -> INC ID','command',2,'p_command_incdec','powrser.py',140),
  ('command -> DEC ID','command',2,'p_command_incdec','powrser.py',141),
  ('command -> POW2 expr','command',2,'p_command_pow2','powrser.py',145),
  ('command -> AND expr expr','command',3,'p_command_boolop','powrser.py',149),
  ('command -> OR expr expr','command',3,'p_command_boolop','powrser.py',150),
  ('command -> XOR expr expr','command',3,'p_command_boolop','powrser.py',151),
  ('command -> NOT expr','command',2,'p_command_boolop','powrser.py',152),
  ('command -> HEAD expr','command',2,'p_command_listcmd','powrser.py',161),
  ('command -> TAIL expr','command',2,'p_command_listcmd','powrser.py',162),
  ('command -> LAST expr','command',2,'p_command_listcmd','powrser.py',163),
  ('command -> LEN expr','command',2,'p_command_listcmd','powrser.py',164),
  ('command -> MAP expr expr','command',3,'p_command_listcmd','powrser.py',165),
  ('command -> FILTER expr expr','command',3,'p_command_listcmd','powrser.py',166),
  ('command -> SET ID expr','command',3,'p_command_set','powrser.py',176),
  ('command -> SET LPAREN ID COLUMN expr RPAREN expr','command',7,'p_command_set','powrser.py',177),
  ('command -> PUSH ID sequence','command',3,'p_command_push','powrser.py',184),
  ('command -> DEF ID LBRACKET RBRACKET COLUMN statements','command',6,'p_command_def','powrser.py',188),
  ('command -> DEF ID LBRACKET id_sequence RBRACKET COLUMN statements','command',7,'p_command_def','powrser.py',189),
  ('command -> ID','command',1,'p_command_call','powrser.py',196),
  ('command -> ID sequence','command',2,'p_command_call','powrser.py',197),
  ('command -> LAMBDA LBRACKET id_sequence RBRACKET COLUMN expr','command',6,'p_command_lambda','powrser.py',204),
  ('command -> AT ID sequence','command',3,'p_command_lambdacall','powrser.py',208),
  ('command -> DEL ID','command',2,'p_command_del','powrser.py',212),
  ('command -> RND','command',1,'p_command_rnd','powrser.py',216),
  ('command -> TIME','command',1,'p_command_time','powrser.py',220),
  ('command -> PAUSE expr','command',2,'p_command_pause','powrser.py',224),
  ('command -> GETCUR','command',1,'p_command_getcur','powrser.py',228),
  ('command -> SCRSIZE','command',1,'p_command_scrsize','powrser.py',232),
  ('command -> USES ID','command',2,'p_command_uses','powrser.py',236),
]
